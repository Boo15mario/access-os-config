# nwg-shell Hyprland config file
#
# The nwg-shell-config utility generates a part of settings for you:
# General, Input devices, Touchpad, Dwindle layout, Master layout.
# Decoration, animations, gestures and per-device config are left to be configured by yourself.
# Refer to the Hyprland wiki at https://wiki.hyprland.org for more information.

#
# Monitors & workspaces: nwg-displays generates 2 files, which we include here:
#
source = ~/.config/hypr/monitors.conf
source = ~/.config/hypr/workspaces.conf

#
# Autostart. Feel free to add your own entries.
# Shell components will be started in the includes.conf file, which we include below.
#
exec = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec = /usr/bin/orca
exec-once = ~/.azotebg-hyprland # Wallpaper
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

#
# Include settings generated by nwg-shell-config
#
source = ~/.config/hypr/includes.conf

#
# All the settings below are up to you. We don't touch them in the shell config utility.
#

# Some default env vars.t
env = XCURSOR_SIZE,24

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    rounding = 5
    blur {
         enabled = true
         size = 3
         passes = 1
         new_optimizations = true
    }

    drop_shadow = true
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}
windowrule = noinitialfocus,^(xfce4-notifyd)$
animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = false
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
# device:epic-mouse-v1 {
#     sensitivity = -0.5
# }

# Example windowrule v1
windowrule = float, ^(galculator|azote)$
windowrule = float,title:^(Postęp działań na plikach)$
# Example windowrule v2
windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
windowrulev2 = float,title:^(Potwierdzenie zastąpienia plików)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# KEY BINDINGS, see https://wiki.hyprland.org/Configuring/Binds/ for more
# If you happen to change some key bindings, you may also edit ~/.local/share/nwg-shell-config/help-hyprland.pango

# Access OS spacific keybinds

# Raise volume
bind = $mainMod, F10, exec, access-system --vol-up
bindel = , XF86AudioRaiseVolume, exec, access-system --vol-up

# Lower volume
bind = $mainMod, F9, exec, access-system --vol-down
bindel = , XF86AudioLowerVolume, exec, access-system --vol-down

# Mute or unmute the audio
bind = $mainMod, F8, exec, access-system --mute-toggle
bindel = , XF86AudioMute, exec, access-system --mute-toggle

# Raise mic volume
bind = $mainMod, F3, exec, access-system --mic-up

# Lower mic volume
bind = $mainMod, F2, exec, access-system --mic-down

# Mute microphone
# There is no audio feedback to tell the user the status of the microphone (muted/unmuted) therefore this is disabled by default.
# Enable this if you wish by uncommenting the lines below.
# bind = $mainMod, F1, exec, access-system --mic-mute-toggle
# bindel = , XF86AudioMicMute, exec, access-system --mic-mute-toggle

# Increase screen brightness
bindel = , XF86MonBrightnessUp, exec, access-system --brightness-up
bind = $mainMod, F6, exec, access-system --brightness-up

# Decrease screen brightness
bindel = , XF86MonBrightnessDown, exec, access-system --brightness-down
bind = $mainMod, F5, exec, access-system --brightness-down

#Announce used memory
bind = $mainMod ALT, 1, exec, access-system --memory

# Announce information about disks
bind = $mainMod ALT, 2, exec, access-system --disk

# Announce kernel version
bind = $mainMod ALT, 3, exec, access-system --kernel

# Announce number of installed packages
bind = $mainMod ALT, 4, exec, access-system --packages

# Announce average CPU usage. This may take a few seconds to execute
bind = $mainMod ALT, 5, exec, access-system --cpu

# Announce system battery if available
bind = $mainMod ALT, 6, exec, access-system --battery

# Announce CPU uptime
bind = $mainMod ALT, 7, exec, access-system --uptime

# speak the current time
bind = $mainMod ALT, T, exec, access-system --time

# Speak the current date
bind = $mainMod ALT, D, exec, access-system --date

# Start the Orca screen reader or restart it if running
bind = $mainMod SHIFT, O, exec, orca -r

# Kill Orca
bind = $mainMod, O, exec, killall orca

# OCR the screen
bind = $mainMod ALt, O, exec, grim /tmp/ocr.png&&ocrdesktop -f /tmp/ocr.png

# We've defined $term, $editor and so on in includes.conf.
bind = $mainMod SHIFT, W, exec, $browser
bind = $mainMod SHIFt, E, exec, $editor
bind = $mainMod, X, exec, $exit
bind = $mainMod SHIFt, P, exec, $filemanager
bind = ALt, F1, exec, $launcher
bind = ALT, C, exec, nwg-clipman
bind = CONTROL+ALT, T, exec, $term
bind = $mainMod, R, exec, gmrun

# Show/hide the dock, if started
bind = ALT, D, exec, pkill -10 nwg-dock

bind = $mainMod, Lexec, nwg-lock                  # screen locker, according to shell settings
bind = $mainMod, F1, exec, nwg-shell-help           # help window

bind = $mainMod, F, fullscreen
bind = $mainMod, I, pin
bind = ALT, F4, killactive,
bind = $mainMod SHIFT, M, exit,
bind = $mainMod, Space, togglefloating,
bind = $mainMod, V, togglefloating,
bind = $mainMod SHIFT, C, exec, hyprctl reload      # reload Hyprland
bind = $mainMod SHIFT, Z, movetoworkspace, special  # move to the special workspace
bind = $mainMod, Z, togglespecialworkspace          # show/hide special workspace
bind = ALT, Tab, cyclenext, tiled                       # (dwindle)
bind = $mainMod, Tab, cyclenext, floating

# SCREENSHOT (/usr/local/bin/screenshot)
bind = , Print, exec, screenshot fullscreen                           # full screen
bind = CONTROL, Print, exec, screenshot display                       # focused display
bind = $mainMod SHIFT+CONTROL, Print, exec, screenshot focused        # focused window
bind = SHIFT+CONTROL, Print, exec, screenshot swappy                  # selected region -> swappy

# MOVE FOCUS with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# MOVE WINDOW with mainMod SHIFT + arrow keys
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# SWITCH WORKSPACES with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# MOVE ACTIVE WINDOW TO A WORKSPACE with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# SCROLL THROUGH EXISTING WORKSPACES with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# MOVE/RESIZE WINDOWS with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
# Shutdown or reboot the system
bind = CONTROL+ALT, DELETE, exec, access-system --reboot
